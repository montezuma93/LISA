Note: transplant
Note: made from fumes.sym

Analog Trolly
    DefPreds
        better 2 preferred better comparative superior ;
        travel 2 motion move reavel ;
        runaway 1 motion out_of_control rapid ;
        hit 2 motion contact hit ;
        divert 2 motion change delta divert ;
        push 2 action push motion forward -inaction ;
        do_nothing 1 action -push -motion -forward inaction ;
        kill 2 cause_die kill -save bad -good ;
        save 2 save -kill -cause_die good -bad ;
    end ;
    DefObjs
        trolly vehicle large heavy trolly ;
        tracks roadway transit metal rails tracks ;
        switch device electric control ;
        small_group people workmen few small -many -large ;
        large_group people workmen many large -few -small ;
        you person first_person actor you ;
    end ;
    DefProps
        P1 travel ( trolly tracks ) ;
        P2 runaway ( trolly ) ;
        P3 hit ( trolly large_group ) ;
        P4 do_nothing ( you ) ;
        P5 kill ( trolly large_group ) ;
        P6 save ( you small_group ) ;
        P7 push ( you switch ) ;
        P8 divert ( switch trolly ) ;
        P9 hit ( trolly small_group ) ;
        P10 kill ( trolly small_group ) ;
        P11 save ( you large_group ) ;
        P12 better ( P11 P6 ) ;
    end ;
    DefGroups
        Cause ( P1 P2 P4 ) ( P3 ) ;
        Cause ( P3 ) ( P5 P6 ) ;
        Cause ( P7 ) ( P8 ) ;
        Cause ( P8 ) ( P9 ) ;
        Cause ( P9 ) ( P10 P11 ) ;
    end ; 
done ; { trolly problem 
        
Analog Transplant
    DefPreds
        better 2 preferred better comparative superior ;
        dying 1 dying bad alive future_dead suffer -healthy ;
        healthy 1 -dying healthy alive future_alive -future_dead -bad ;
        transplant 2 medical proceduew complex risky move_organs ;
        do_nothing 1 action -push -motion -forward inaction ;
        kill 2 cause_die kill -save bad -good ;
        save 2 save -kill -cause_die good -bad ;
    end ;
    DefObjs
        one_patient person people patient few small -many -large ;
        many_patients people patients many large -few -small ;
        you person first_person actor you ;
        organs medical body biology parts living ;
    end ;
    DefProps
        P1 dying ( many_patients ) ;
        P2 healthy ( one_patient ) ;
        P3 do_nothing ( you ) ;
        P4 transplant ( you organs ) ;
        P5 kill ( many_patients ) ;
        P6 kill ( one_patient ) ;
        P7 save ( many_patients ) ;
        P8 save ( one_patient ) ;
        P9 better ( P7 P8 ) ;
    end ;
    DefGroups
        Cause ( P1 P3 ) ( P5 ) ;
        Cause ( P2 P3 ) ( P8 ) ;
        Cause ( P4 ) ( P6 P7 ) ;
    end ; 
done ; { fumes problem

Analog Schema
done

Sequence
    Driver=[ 1 ]
    Recip=[ 0 ]
    { Order=[ P9 h P7 h P8 h CE-1 ( 6 1 ) CE-2 ( 6 1 ) CE-3 ( 6 1 ) ]
    Order=[ R ( 20 1 ) ]
    LearningON
    Driver=[ 0 ]
    Recip=[ 1 2 ]
    Order=[ CE-1 ( 6 1 ) CE-2 ( 4 1 ) CE-3 ( 5 1 ) CE-4 ( 4 1 ) CE-5 ( 4 1 ) ]
done.


        
         
